name: Test example application

on:
  push:
    branches:
      - main
    paths:
      - 'example-backend/**'
      - 'example-frontend/**'
      - '.github/workflows/example-application.yml'

jobs:
  test-exercises:
    name: Test pre-nginx
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - run: 'echo "$EXAMPLE_BACKEND_DOCKERFILE" > example-backend/Dockerfile'
      shell: bash
      env:
        EXAMPLE_BACKEND_DOCKERFILE: ${{ secrets.EXAMPLE_BACKEND_DOCKERFILE }}

    - run: 'echo "$EXAMPLE_FRONTEND_DOCKERFILE" > example-frontend/Dockerfile'
      shell: bash
      env:
        EXAMPLE_FRONTEND_DOCKERFILE: ${{ secrets.EXAMPLE_FRONTEND_DOCKERFILE }}

    - run: 'echo "$COMPOSE" > docker-compose.yml'
      shell: bash
      env:
        COMPOSE: ${{ secrets.COMPOSE }}

    - run: 'echo "$BACKEND_SOLUTION" > docker-compose.override.yml'
      shell: bash
      env:
        BACKEND_SOLUTION: ${{ secrets.BACKEND_SOLUTION }}

    - run: docker-compose up -d

    # Cypress test backend
    - name: Cypress run
      uses: cypress-io/github-action@v2
      env:
        CYPRESS_FRONTEND_URL: http://localhost:5000
      with:
        working-directory: ./example-application-cypress
        spec: cypress/integration/backend.spec.js

    # Append redis solution
    - run: 'echo "$REDIS_SOLUTION" >> docker-compose.override.yml'
      shell: bash
      env:
        REDIS_SOLUTION: ${{ secrets.REDIS_SOLUTION }}

    - run: docker-compose down && docker-compose up -d
  
    # Cypress test redis
    - name: Cypress run
      uses: cypress-io/github-action@v2
      env:
        CYPRESS_FRONTEND_URL: http://localhost:5000
      with:
        working-directory: ./example-application-cypress
        spec: cypress/integration/redis.spec.js

    # Append postgres solution
    - run: 'echo "$POSTGRES_SOLUTION" >> docker-compose.override.yml'
      shell: bash
      env:
        POSTGRES_SOLUTION: ${{ secrets.POSTGRES_SOLUTION }}

    - run: docker-compose down && docker-compose up -d

    # Cypress test postgres
    - name: Cypress run
      uses: cypress-io/github-action@v2
      env:
        CYPRESS_FRONTEND_URL: http://localhost:5000
      with:
        working-directory: ./example-application-cypress
        spec: cypress/integration/postgres.spec.js


  test-project:
    name: Test everything
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - run: 'echo "$EXAMPLE_BACKEND_DOCKERFILE" > example-backend/Dockerfile'
      shell: bash
      env:
        EXAMPLE_BACKEND_DOCKERFILE: ${{ secrets.EXAMPLE_BACKEND_DOCKERFILE }}

    - run: 'echo "$EXAMPLE_FRONTEND_DOCKERFILE_NGINX" > example-frontend/Dockerfile'
      shell: bash
      env:
        EXAMPLE_FRONTEND_DOCKERFILE_NGINX: ${{ secrets.EXAMPLE_FRONTEND_DOCKERFILE_NGINX }}

    - run: 'echo "$COMPOSE" > docker-compose.yml'
      shell: bash
      env:
        COMPOSE: ${{ secrets.COMPOSE }}

    - run: 'echo "$PROJECT_SOLUTION_NGINX" > docker-compose.override.yml'
      shell: bash
      env:
        PROJECT_SOLUTION_NGINX: ${{ secrets.PROJECT_SOLUTION_NGINX }}

    - run: 'echo "$NGINX_CONFIG" > nginx.conf'
      shell: bash
      env:
        NGINX_CONFIG: ${{ secrets.NGINX_CONFIG }}

    - run: docker-compose up -d

    - name: Cypress run
      uses: cypress-io/github-action@v2
      env:
        CYPRESS_FRONTEND_URL: http://localhost:80
      with:
        working-directory: ./example-application-cypress
